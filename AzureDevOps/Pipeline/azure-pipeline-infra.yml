trigger:
  branches:
    include:
      - main
  paths:
    exclude:
      - AzureDevOps/*  # Ignore changes in this folder

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: secrer-santa-secretsanta-f4465ce8-e6e6-4c46-b979-67aea42c5fb1  # ‚úÖ Link to Azure DevOps variable group

  # ‚úÖ Define Terraform-specific variables separately
  - name: terraformVersion
    value: '1.6.0'
  - name: terraformWorkingDirectory
    value: 'AzureDevOps/Infrastructure/azure-vm'

stages:
- stage: Deploy_VM
  jobs:
  - job: Terraform
    steps:

    - task: AzureCLI@2
      displayName: 'üîê Azure Login'
      inputs:
        azureSubscription: '$(azureServiceConnection)'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          echo "Logged in to Azure..."
          az account show

    - script: |
        echo "‚¨áÔ∏è Installing Terraform $(terraformVersion)..."
        curl -sLo terraform.zip https://releases.hashicorp.com/terraform/$(terraformVersion)/terraform_$(terraformVersion)_linux_amd64.zip
        unzip terraform.zip
        sudo mv terraform /usr/local/bin/
        terraform -version
      displayName: 'üì¶ Install Terraform CLI'

    - script: |
        echo "üìÇ Changing to Terraform directory..."
        cd $(terraformWorkingDirectory)

        echo "üìÅ Initializing Terraform..."
        terraform init
      workingDirectory: $(terraformWorkingDirectory)
      displayName: 'üîß Terraform Init'

    - script: |
        echo "üîç Validating Terraform..."
        terraform validate
      workingDirectory: $(terraformWorkingDirectory)
      displayName: '‚úÖ Terraform Validate'

    - script: |
        echo "üß† Planning Terraform..."
        export TF_SUBSCRIPTION_ID="$(subscription_id)"
        export TF_CLIENT_ID="$(client_id)"
        export TF_CLIENT_SECRET="$(client_secret)"
        export TF_TENANT_ID="$(tenant_id)"
        export TF_ADMIN_PASSWORD="$(admin_password)"
        export TF_SERVICE_CONNECTION="$(service_connection)"

        terraform plan \
          -var "subscription_id=$TF_SUBSCRIPTION_ID" \
          -var "client_id=$TF_CLIENT_ID" \
          -var "client_secret=$TF_CLIENT_SECRET" \
          -var "tenant_id=$TF_TENANT_ID" \
          -var "admin_password=$TF_ADMIN_PASSWORD" \
          -var "service_connection=TF_SERVICE_CONNECTION" \
          -var-file="terraform.tfvars" \
          -out=tfplan.out
      workingDirectory: $(terraformWorkingDirectory)
      displayName: 'üìù Terraform Plan'
      env:
        subscription_id: $(subscription_id)
        client_id: $(client_id)
        client_secret: $(client_secret)
        tenant_id: $(tenant_id)
        admin_password: $(admin_password)
        service_connection: $(service_connection)

    - script: |
        echo "üöÄ Applying Terraform..."
        export TF_SUBSCRIPTION_ID="$(subscription_id)"
        export TF_CLIENT_ID="$(client_id)"
        export TF_CLIENT_SECRET="$(client_secret)"
        export TF_TENANT_ID="$(tenant_id)"
        export TF_ADMIN_PASSWORD="$(admin_password)"
        export TF_SERVICE_CONNECTION="$(service_connection)"

        terraform apply -auto-approve tfplan.out
      workingDirectory: $(terraformWorkingDirectory)
      displayName: 'üöÄ Terraform Apply'
      env:
        subscription_id: $(subscription_id)
        client_id: $(client_id)
        client_secret: $(client_secret)
        tenant_id: $(tenant_id)
        admin_password: $(admin_password)
        service_connection: $(service_connection)
