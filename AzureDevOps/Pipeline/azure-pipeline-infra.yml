trigger:
  branches:
    include:
      - main
  paths:
    exclude:
      - AzureDevOps/*  # Ignore changes in this folder

pool:
  vmImage: 'ubuntu-latest'

variables:
  azureServiceConnection: 'secrer-santa-secretsanta-f4465ce8-e6e6-4c46-b979-67aea42c5fb1'  # Update with your service connection
  terraformVersion: '1.6.0'
  terraformWorkingDirectory: 'AzureDevOps/Infrastructure/azure-vm'  # ✅ Updated path

stages:
- stage: Deploy_VM
  jobs:
  - job: Terraform
    steps:

    # 🔐 Authenticate to Azure
    - task: AzureCLI@2
      displayName: '🔐 Azure Login'
      inputs:
        azureSubscription: '$(azureServiceConnection)'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          echo "Logged in to Azure:"
          az account show

    # 📦 Install Terraform
    - script: |
        echo "⬇️ Installing Terraform $(terraformVersion)..."
        curl -sLo terraform.zip https://releases.hashicorp.com/terraform/$(terraformVersion)/terraform_$(terraformVersion)_linux_amd64.zip
        unzip terraform.zip
        sudo mv terraform /usr/local/bin/
        terraform -version
      displayName: '📦 Install Terraform CLI'

    # 🔧 Initialize Terraform
    - script: |
        echo "📂 Changing to Terraform directory..."
        cd $(terraformWorkingDirectory)

        echo "📁 Initializing Terraform..."
        terraform init
      workingDirectory: $(terraformWorkingDirectory)
      displayName: '🔧 Terraform Init'

    # ✅ Validate Terraform files
    - script: |
        echo "🔍 Validating Terraform..."
        terraform validate
      workingDirectory: $(terraformWorkingDirectory)
      displayName: '✅ Terraform Validate'

    # 🔑 Securely Pass Subscription and Authentication Variables
    - script: |
        echo "🧠 Planning Terraform..."
        terraform plan \
          -var "subscription_id=$TF_SUBSCRIPTION_ID" \
          -var "client_id=$TF_CLIENT_ID" \
          -var "client_secret=$TF_CLIENT_SECRET" \
          -var "tenant_id=$TF_TENANT_ID" \
          -var "admin_password=$TF_ADMIN_PASSWORD" \
          -var-file="terraform.tfvars" \
          -out=tfplan.out
      workingDirectory: $(terraformWorkingDirectory)
      displayName: '📝 Terraform Plan'
      env:
        TF_SUBSCRIPTION_ID: $(subscription_id)
        TF_CLIENT_ID: $(client_id)
        TF_CLIENT_SECRET: $(client_secret)
        TF_TENANT_ID: $(tenant_id)
        TF_ADMIN_PASSWORD: $(admin_password)

    # 🚀 Apply Terraform Changes
    - script: |
        echo "🚀 Applying Terraform..."
        terraform apply -auto-approve tfplan.out
      workingDirectory: $(terraformWorkingDirectory)
      displayName: '🚀 Terraform Apply'
      env:
        TF_SUBSCRIPTION_ID: $(subscription_id)
        TF_CLIENT_ID: $(client_id)
        TF_CLIENT_SECRET: $(client_secret)
        TF_TENANT_ID: $(tenant_id)
        TF_ADMIN_PASSWORD: $(admin_password)